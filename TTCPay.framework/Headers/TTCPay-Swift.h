// Generated by Apple Swift version 4.2 (swiftlang-1000.11.37.1 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TTCPay",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC6TTCPay14TTCCreateOrder")
@interface TTCCreateOrder : NSObject
/// RSA sign
/// Take the attributes from the object and sort by key
/// let signString = “appId=valud&createTime=valud&description_p=valus…..”
/// let signMD5String = Do MD5 on signString
/// requestSign = encrypt signMD5String on RSA
@property (nonatomic, copy) NSString * _Nonnull requestSign;
/// Partner’s unique order number
@property (nonatomic, copy) NSString * _Nonnull outTradeNo;
/// product description
@property (nonatomic, copy) NSString * _Nonnull description_p;
/// Total (TTC) , unit = wei
@property (nonatomic, copy) NSString * _Nonnull totalFee;
/// Wallet collection address (can be empty)
@property (nonatomic, copy) NSString * _Nonnull partnerAddress;
/// Order creation time (in milliseconds)
@property (nonatomic) int64_t createTime;
/// Order deadline (in milliseconds)
@property (nonatomic) int64_t expireTime;
/// 1-TTC支付(默认是1)
@property (nonatomic) int32_t payType;
/// Whether it is the customer’s own page (if it is custom, only return the QR code 1-custom 2-general)
@property (nonatomic) int32_t sellerDefinedPage;
/// APPId applied by the partner
@property (nonatomic, copy) NSString * _Nonnull appId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6TTCPay20TTCCreateOrderResult")
@interface TTCCreateOrderResult : NSObject
/// Order number generated by TTC
@property (nonatomic, copy) NSString * _Nonnull orderId;
/// QR code image address
@property (nonatomic, copy) NSString * _Nonnull qrcodeUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6TTCPay8TTCOrder")
@interface TTCOrder : NSObject
/// TTC order ID
@property (nonatomic, copy) NSString * _Nonnull orderId;
/// Partner’s unique order number
@property (nonatomic, copy) NSString * _Nonnull outTradeNo;
/// product description
@property (nonatomic, copy) NSString * _Nonnull description_p;
/// Total (TTC) , unit = wei
@property (nonatomic, copy) NSString * _Nonnull totalFee;
/// Collection address
@property (nonatomic, copy) NSString * _Nonnull partnerAddress;
/// Receiver
@property (nonatomic, copy) NSString * _Nonnull partnerName;
/// Order creation time (in milliseconds)
@property (nonatomic) int64_t createTime;
/// Order deadline (in milliseconds)
@property (nonatomic) int64_t expireTime;
/// 1-Create Order 2-Confirmation 3-Payment Completion 4-Expired 5-Dissipated
@property (nonatomic) int32_t state;
/// Blockchain transaction number
@property (nonatomic, copy) NSString * _Nonnull txHash;
/// The amount of gas paid
@property (nonatomic) uint32_t payGasLimit;
/// Paid gas price
@property (nonatomic, copy) NSString * _Nonnull payGasPrice;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class TTCPayError;

SWIFT_CLASS("_TtC6TTCPay6TTCPay")
@interface TTCPay : NSObject
/// Initialize
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TTCPay * _Nonnull shared;)
+ (TTCPay * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Userid
@property (nonatomic, copy) NSString * _Nonnull userID;
/// The SecretKey assigned by the TTC platform cannot be nil
@property (nonatomic, copy) NSString * _Nonnull secretKey;
/// AppId assigned by the TTC platform, cannot be nil
@property (nonatomic, copy) NSString * _Nonnull appId;
/// Version
@property (nonatomic, readonly) int32_t SDKVersion;
@property (nonatomic, copy) NSString * _Nonnull apiURL;
/// Your app scheme
@property (nonatomic, copy) NSString * _Nonnull scheme;
/// Callback query order after successful payment
@property (nonatomic, copy) void (^ _Nullable payBack)(BOOL, TTCOrder * _Nullable, TTCPayError * _Nullable);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface TTCPay (SWIFT_EXTENSION(TTCPay))
/// Create an order and jump to the wallet to pay
- (void)createOrderAndPayWithCreateOrder:(TTCCreateOrder * _Nonnull)createOrder result:(void (^ _Nonnull)(BOOL, TTCCreateOrderResult * _Nullable, TTCPayError * _Nullable))result;
/// Query TTC price
/// 1-CNY  2- USD 3-KRW 4-VND
- (void)fetchPriceWithCurrencyType:(int32_t)currencyType result:(void (^ _Nonnull)(BOOL, NSString * _Nullable, TTCPayError * _Nullable))result;
/// Query order information
- (void)fetchOrderWithOrderId:(NSString * _Nonnull)orderId result:(void (^ _Nonnull)(BOOL, TTCOrder * _Nullable, TTCPayError * _Nullable))result;
/// Wallet payment complete callback and query order information.
/// call var payBack: ((Bool, TTCOrder?, TTCPayError?) -> Void)?
+ (BOOL)receivePayCallBackWithUrl:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6TTCPay11TTCPayError")
@interface TTCPayError : NSObject
/// code
@property (nonatomic, copy) NSString * _Nonnull code;
/// description
@property (nonatomic, copy) NSString * _Nonnull errorDescription;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC6TTCPay12TTCUnitPrice")
@interface TTCUnitPrice : NSObject
/// 1TTC corresponding currency value
@property (nonatomic) float value;
/// Currency Symbol 1-CNY 2- USD 3-KRW 4-VND
@property (nonatomic) int32_t type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
